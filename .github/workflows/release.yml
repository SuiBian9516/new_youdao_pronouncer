name: Build and Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main

jobs:
  build-and-release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Setup Git for HTTPS
        run: |
          git config --global url."https://github.com/".insteadOf "git@github.com:"
          git config --global url."https://".insteadOf "git://"
          git config --global url."https://github.com/".insteadOf "ssh://git@github.com/"
        shell: pwsh

      - name: Configure Yarn
        run: |
          yarn config set network-timeout 300000
          yarn config set registry https://registry.npmjs.org/
          yarn config set npmRegistryServer https://registry.npmjs.org/
          yarn config set unsafeHttpWhitelist "*"

      - name: Install dependencies with HTTPS
        run: yarn install --frozen-lockfile --network-timeout 300000
        env:
          GIT_SSH_COMMAND: "echo skipping ssh"
          npm_config_registry: "https://registry.npmjs.org/"
          YARN_REGISTRY: "https://registry.npmjs.org/"
          USE_HTTPS: "true"

      - name: Build application
        run: yarn build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: true

      - name: Extract version from tag
        id: get_version
        run: |
          $TAG_NAME="${{ github.ref_name }}"
          $VERSION=$TAG_NAME.TrimStart('v')
          echo "VERSION=$VERSION" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Check for CHANGELOG.md
        id: check_changelog
        run: |
          if (Test-Path "CHANGELOG.md") {
            echo "EXISTS=true" >> $env:GITHUB_OUTPUT
            $content = Get-Content -Path "CHANGELOG.md" -Raw
            echo "CHANGELOG_CONTENT<<EOF" >> $env:GITHUB_OUTPUT
            echo "$content" >> $env:GITHUB_OUTPUT
            echo "EOF" >> $env:GITHUB_OUTPUT
          } else {
            echo "EXISTS=false" >> $env:GITHUB_OUTPUT
            echo "CHANGELOG_CONTENT=版本 ${{ github.ref_name }} 发布" >> $env:GITHUB_OUTPUT
          }
        shell: pwsh

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body: ${{ steps.check_changelog.outputs.CHANGELOG_CONTENT }}
          draft: false
          prerelease: false
          files: |
            dist/*.exe
            dist/*.zip
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}