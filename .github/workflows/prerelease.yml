name: Build and Pre-release

on:
  push:
    tags:
      - 'v*-pre*'
      - 'v*-alpha*'
      - 'v*-beta*'
      - 'v*-rc*'
      - 'v*-dev*'

permissions:
  contents: write
  discussions: write

jobs:
  build-and-prerelease:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Setup Git for HTTPS
        run: |
          git config --global url."https://github.com/".insteadOf "git@github.com:"
          git config --global url."https://".insteadOf "git://"
          git config --global url."https://github.com/".insteadOf "ssh://git@github.com/"
        shell: pwsh

      - name: Configure Yarn
        run: |
          yarn config set network-timeout 300000
          yarn config set registry https://registry.npmjs.org/
          yarn config set npmRegistryServer https://registry.npmjs.org/
          yarn config set unsafeHttpWhitelist "*"

      - name: Install dependencies with HTTPS
        run: yarn install --frozen-lockfile --network-timeout 300000
        env:
          GIT_SSH_COMMAND: "echo skipping ssh"
          npm_config_registry: "https://registry.npmjs.org/"
          YARN_REGISTRY: "https://registry.npmjs.org/"
          USE_HTTPS: "true"

      - name: Build application
        run: yarn build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: true

      - name: Extract version from tag
        id: get_version
        run: |
          $TAG_NAME="${{ github.ref_name }}"
          $VERSION=$TAG_NAME.TrimStart('v')
          echo "VERSION=$VERSION" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Prepare pre-release notes
        id: prerelease_notes
        run: |
          $PRE_NOTES="## 预发布版本 ${{ github.ref_name }}

          这是一个预发布版本，可能包含实验性功能和已知问题。请不要用作生产环境。
          
          "
          
          if (Test-Path "CHANGELOG.md") {
            $CHANGELOG = Get-Content -Path "CHANGELOG.md" -Raw
            $PRE_NOTES = $PRE_NOTES + $CHANGELOG
          }
          
          echo "NOTES<<EOF" >> $env:GITHUB_OUTPUT
          echo "$PRE_NOTES" >> $env:GITHUB_OUTPUT
          echo "EOF" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Create Pre-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Pre-release ${{ github.ref_name }}
          body: ${{ steps.prerelease_notes.outputs.NOTES }}
          draft: false
          prerelease: true
          files: |
            dist/*.exe
            dist/*.zip
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}